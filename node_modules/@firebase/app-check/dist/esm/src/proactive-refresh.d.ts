/**
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { Promise } from 'es6-promise';

/**
 * Represents a refresher that can be used to periodically execute an operation
 * while handling any errors that occur during its execution.
 */
export declare class Refresher {
    /**
     * The operation to be executed periodically.
     * @private
     */
    private operation;

    /**
     * A function that determines whether an error should be retried based on its value.
     * @private
     */
    private retryPolicy;

    /**
     * A function that returns the wait duration in milliseconds before the next retry.
     * @private
     */
    private getWaitDuration;

    /**
     * The minimum wait duration in milliseconds before the next retry.
     * @private
     */
    private readonly lowerBound;

    /**
     * The maximum wait duration in milliseconds before the next retry.
     * @private
     */
    private readonly upperBound;

    /**
     * A flag that indicates whether the refresher is currently running.
     * @private
     */
    private pending;

    /**
     * The wait duration in milliseconds before the next retry.
     * @private
     */
    private nextErrorWaitInterval;

    /**
     * Creates a new Refresher instance.
     * @param operation - The operation to be executed periodically.
     * @param retryPolicy - A function that determines whether an error should be retried based on its value.
     * @
