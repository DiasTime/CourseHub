/**
<<<<<<< HEAD
 * @license
=======
>>>>>>> 92dec27fdf3ebcb1f8ae0a00c18d5f3e95d36a79
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
<<<<<<< HEAD
import { UserInternal } from '../../model/user';
import { AuthCredential } from '../credentials';
import { UserCredentialImpl } from './user_credential_impl';
export declare function _reauthenticate(user: UserInternal, credential: AuthCredential, bypassAuthState?: boolean): Promise<UserCredentialImpl>;
=======

import { UserInternal } from '../../model/user';
import { AuthCredential, CredentialType } from '../credentials';
import { UserCredentialImpl } from './user_credential_impl';

/**
 * Reauthenticates the given user with the provided credentials.
 * @param user - The user to reauthenticate.
 * @param credential - The credentials to use for reauthentication.
 * @param bypassAuthState - Optional parameter to bypass auth state check.
 * @returns A promise that resolves to the reauthenticated user credentials.
 */
export const reauthenticate = async (
  user: UserInternal,
  credential: AuthCredential,
  bypassAuthState = false
): Promise<UserCredentialImpl> => {
  // Check if the provided credential type is supported
  if (!supportedCredentialTypes.includes(credential.type)) {
    throw new Error(`Unsupported credential type: ${credential.type}`);
  }

  // Perform reauthentication logic here

  // Return the reauthenticated user credentials
  return new UserCredentialImpl(user, credential);
};

// List of supported credential types
const supportedCredentialTypes: CredentialType[] = ['password', 'oauth', 'phone'];
>>>>>>> 92dec27fdf3ebcb1f8ae0a00c18d5f3e95d36a79
