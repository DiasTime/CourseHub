/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import fetch, { Headers } from 'node-fetch';

export interface Call {
    request?: object | string;
    method?: string;
    headers: Headers;
}

export interface Route {
    response: object;
    status: number;
    calls: Call[];
}

let fetchOverride: typeof fetch;

export function setUpWithOverride(overrideFetch: typeof fetch): void {
    fetchOverride = overrideFetch;
}

export function setUp(): void {
    setUpWithOverride(fetch);
}

export function mock(url: string, response: object, status?: number): Route {
    const defaultHeaders = new Headers();
    defaultHeaders.append('Content-Type', 'application/json');

    return {
        response,
        status: status || 200,
        calls: [],
        intercept(method: string, url: string, options?: object): Promise<Response> {
            if (fetchOverride) {
                return fetchOverride(url, { ...options, headers: { ...defaultHeaders, ...options?.headers } });
            }
            throw new Error('Fetch override not set');
        },
    };
}

export function tearDown(): void {
    fetchOverride = undefined;
}
