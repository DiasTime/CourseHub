/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
<<<<<<< HEAD
import { AuthProvider } from '../../model/public_types';
import { AuthInternal } from '../../model/auth';
import { AuthEventType } from '../../model/popup_redirect';
export declare function _getRedirectUrl(auth: AuthInternal, provider: AuthProvider, authType: AuthEventType, redirectUrl?: string, eventId?: string, additionalParams?: Record<string, string>): Promise<string>;
=======
import { AuthProvider, AuthEventType } from '../../model/public_types';
import { AuthInternal } from '../../model/auth';

export declare function getRedirectUrl(
  auth: AuthInternal,
  provider: AuthProvider,
  authType: AuthEventType,
  redirectUrl?: string,
  eventId?: string,
  additionalParams: Record<string, string> = {}
): Promise<string> {
  console.log(`Getting redirect URL for provider ${provider} and auth type ${authType}`);

  const baseUrl = new URL(`https://${auth.host}/o/oauth2/v2/auth`);

  baseUrl.searchParams.append('client_id', auth.clientId);
  baseUrl.searchParams.append('response_type', 'code');
  baseUrl.searchParams.append('scope', auth.scope);
  baseUrl.searchParams.append('redirect_uri', redirectUrl || auth.redirectUri);
  baseUrl.searchParams.append('state', eventId || '');
  baseUrl.searchParams.append('prompt', 'consent');

  if (additionalParams)
>>>>>>> 92dec27fdf3ebcb1f8ae0a00c18d5f3e95d36a79
