/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { FirebaseApp, FirebaseAppCheck, getApps } from '@firebase/app-check-types';
import { AppCheckTokenResult, PartialObserver, Unsubscribe } from '@firebase/app-check';

/**
 * Registers the App Check module with the Firebase namespace.
 * @returns Nothing.
 */
export default function registerAppCheck(): void {
  // Implementation here.
}

/**
 * Define extension behavior of `registerAppCheck`
 */
declare module '@firebase/app-compat' {
  interface FirebaseNamespace<TApp extends FirebaseApp = FirebaseApp> {
    appCheck(app?: TApp): FirebaseAppCheck;
  }
  interface FirebaseApp {
    appCheck(): FirebaseAppCheck;
  }
}

/**
 * App Check utility functions.
 */
declare module '@firebase/app-check' {
  /**
   * Gets a limited use App Check token.
   * @param appCheckInstance - The App Check instance to use.
   * @returns A Promise that resolves with the App Check token result.
   */
  function getLimitedUseToken(appCheckInstance: FirebaseAppCheck): Promise<AppCheckTokenResult>;

  /**
   * Gets an App Check token.
   * @param appCheckInstance - The App Check instance to use.
   * @param forceRefresh - Whether to force refreshing the token.
   * @returns A Promise that resolves with the App Check token result.
   */
  function getToken(appCheckInstance: FirebaseAppCheck, forceRefresh?: boolean): Promise<AppCheckTokenResult>;

  /**
   * Registers a
